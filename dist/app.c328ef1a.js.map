{"version":3,"sources":["app.js"],"names":["document","getElementById","addEventListener","query","fs","require","records","JSON","parse","node","createElement","className","current_question","value","textInNode","createTextNode","appendChild","screendiv","linebreak","luisIntentResponse","getIntent","console","log","luisIntent","prediction","topIntent","luisIntentScore","intents","kbid","i","length","curr_rec","intent","serverResponse","getAnswer","servernode","serverTextInNode","answers","answer","question","top","url","data","fetch","method","headers","Authorization","body","stringify","json","error"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..\\src","sourcesContent":["document.getElementById(\"sendButton\").addEventListener(\"click\", function() {\r\n\tquery();\r\n});\r\n\r\nvar fs = require(\"fs\");\r\nvar records = JSON.parse(fs.readFileSync(\"src/records.json\", \"utf8\"));\r\n//console.log(obj);\r\n\r\nasync function query() {\r\n\tvar node = document.createElement(\"div\");\r\n\tnode.className = \"message\";\r\n\tcurrent_question = document.getElementById(\"userQuery\").value;\r\n\tvar textInNode = document.createTextNode(current_question);\r\n\tdocument.getElementById(\"userQuery\").value = \"\";\r\n\tnode.appendChild(textInNode);\r\n\r\n\t//append user message\r\n\tvar screendiv = document.getElementById(\"screen\");\r\n\tscreendiv.appendChild(node);\r\n\r\n\t//append line breaks\r\n\tlinebreak = document.createElement(\"br\");\r\n\tscreendiv.appendChild(linebreak);\r\n\tscreendiv.appendChild(linebreak);\r\n\r\n\t/*\r\n\tquery LUIS asking for intent\r\n\tcheck top most intent confidence. if found not enough, ask user\r\n\tget domain kbid details from json\r\n\tquery domain and obtain output\r\n\tif most conf. output < 60% confidence, tell user not sure\r\n\tshow most confident output to user\r\n\t*/\r\n\r\n\tvar luisIntentResponse = await getIntent(current_question);\r\n\tconsole.log(luisIntentResponse);\r\n\tvar luisIntent = luisIntentResponse.prediction.topIntent;\r\n\tvar luisIntentScore =\r\n\t\tluisIntentResponse.prediction.intents[luisIntent][\"score\"];\r\n\tvar kbid;\r\n\r\n\tfor (var i = 0; i < records[\"records\"].length; i++) {\r\n\t\tvar curr_rec = records[\"records\"][i];\r\n\t\tif (curr_rec.intent == luisIntent) {\r\n\t\t\tkbid = curr_rec.kbid;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tconsole.log(kbid);\r\n\r\n\tvar serverResponse = await getAnswer(kbid, current_question);\r\n\tconsole.log(serverResponse);\r\n\r\n\t//append server message\r\n\tvar servernode = document.createElement(\"div\");\r\n\tservernode.className = \"servermessage\";\r\n\tvar serverTextInNode = document.createTextNode(\r\n\t\tserverResponse.answers[0].answer\r\n\t);\r\n\tservernode.appendChild(serverTextInNode);\r\n\r\n\t//append user message\r\n\tvar screendiv = document.getElementById(\"screen\");\r\n\tscreendiv.appendChild(servernode);\r\n}\r\n\r\nasync function getAnswer(kbid, current_question) {\r\n\tvar question = { question: current_question, top: 1 };\r\n\r\n\ttry {\r\n\t\tvar url =\r\n\t\t\t\"https://privacyoracle.azurewebsites.net/qnamaker/knowledgebases/\" +\r\n\t\t\tkbid +\r\n\t\t\t\"/generateAnswer\";\r\n\t\tconst data = await fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: \"EndpointKey 0195acbc-2d94-48a5-8776-4322c531f049\",\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(question)\r\n\t\t});\r\n\t\treturn data.json();\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n}\r\n\r\nasync function getIntent(current_question) {\r\n\ttry {\r\n\t\tvar url =\r\n\t\t\t\"https://westus.api.cognitive.microsoft.com/luis/prediction/v3.0/apps\" +\r\n\t\t\t\"/acd7e09e-259e-47de-ac1a-16c763e43f30/slots/production/predict?verbose=true&timezoneOffset=0\" +\r\n\t\t\t\"&subscription-key=12d23ac95af1478984b44d5f77ec122f&query=\" +\r\n\t\t\tcurrent_question +\r\n\t\t\t\"&show-all-intents=true\";\r\n\t\t//const data = await postData(url, { answer: 42 });\r\n\t\tconst data = await fetch(url);\r\n\t\treturn data.json();\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n}\r\n"]}